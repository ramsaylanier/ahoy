version: v2beta1
name: backend

# Service-specific variables
vars:
  IMAGE_TAG: "latest"
  BACKEND_PORT: "3001"
  FRONTEND_PORT: "3000"
  DB_HOST: "postgres-postgresql"
  DB_PORT: "5432"
  DB_USER: "postgres"
  DB_PASSWORD: "ahoy123"
  DB_NAME: "ahoy_projects"
  DB_URL: "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"

# This is a list of `pipelines` that DevSpace can execute
pipelines:
  dev:
    run: |-
      run_dependencies --all       
      ensure_pull_secrets --all 
      create_deployments --all 
      start_dev backend

  build:
    run: |
      build_images --all -t $(git describe --always)

  # You can run this pipeline via `devspace deploy`
  deploy:
    run: |-
      run_dependencies --all                            # 1. Deploy any projects this project needs
      ensure_pull_secrets --all                         # 2. Ensure pull secrets
      build_images --all -t $(git describe --always)    # 3. Build, tag and push all images
      create_deployments --all                          # 4. Deploy Helm charts and manifests

commands:
  port-forward-db: |-
    kubectl port-forward svc/postgres-postgresql 5432:5432

# Images configuration
images:
  backend:
    image: ghcr.io/ahoy/backend:${IMAGE_TAG}
    dockerfile: ./Dockerfile
    buildArgs:
      NODE_ENV: development

# Deployments configuration
deployments:
  postgres:
    helm:
      chart:
        name: postgresql
        repo: https://charts.bitnami.com/bitnami
        version: 16.7.14
      values:
        auth:
          postgresPassword: ${DB_PASSWORD}
          database: ${DB_NAME}
        primary:
          service:
            type: ClusterIP
          persistence:
            enabled: true
            size: 1Gi
        metrics:
          enabled: false

  backend:
    helm:
      chart:
        name: component-chart
        repo: https://charts.devspace.sh
      values:
        containers:
          - image: image(backend)
        service:
          ports:
            - port: ${BACKEND_PORT}
        env:
          - name: NODE_ENV
            value: development
          - name: PORT
            value: ${BACKEND_PORT}
          - name: DB_HOST
            value: ${DB_HOST}
          - name: DB_PORT
            value: ${DB_PORT}
          - name: DB_NAME
            value: ${DB_NAME}
          - name: DB_USER
            value: ${DB_USER}
          - name: DB_PASSWORD
            value: ${DB_PASSWORD}
          - name: DATABASE_URL
            value: ${DB_URL}

# Development configuration
dev:
  backend:
    imageSelector: image(backend)
    devImage: node:22-alpine
    workingDir: /app
    sync:
      - path: ./
        excludePaths:
          - node_modules/
          - .git/
          - dist/
          - build/
        startContainer: true
        onUpload:
          exec:
            - command: |-
                echo "Installing dependencies..."
                npm install
    command: ["npm", "run", "dev"]
    logs:
      enabled: true
    ssh:
      enabled: true
    ports:
      - port: ${BACKEND_PORT}
    env:
      - name: NODE_ENV
        value: development
      - name: PORT
        value: ${BACKEND_PORT}
      - name: DB_HOST
        value: ${DB_HOST}
      - name: DB_PORT
        value: ${DB_PORT}
      - name: DB_NAME
        value: ${DB_NAME}
      - name: DB_USER
        value: ${DB_USER}
      - name: DB_PASSWORD
        value: ${DB_PASSWORD}
      - name: DATABASE_URL
        value: ${DB_URL}
