version: v2beta1

# Service-specific variables
vars:
  SERVICE_NAME: ${SERVICE_NAME}
  SERVICE_PORT: ${SERVICE_PORT}
  PROJECT_NAME: "ahoy-microservices"
  REGISTRY: "ghcr.io"
  IMAGE_TAG: "latest"

# Build configuration for notification service
build:
  notification:
    dockerfile: ./Dockerfile
    context: .
    tags:
      - ${REGISTRY}/${PROJECT_NAME}/${SERVICE_NAME}:${IMAGE_TAG}

# Deploy configuration
deploy:
  helm:
    chart:
      name: ../../charts/microservices
    values:
      notification:
        enabled: true
        image: ${REGISTRY}/${PROJECT_NAME}/${SERVICE_NAME}:${IMAGE_TAG}
        port: ${SERVICE_PORT}
        replicas: 2
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 150m
            memory: 128Mi
        service:
          type: ClusterIP
          port: ${SERVICE_PORT}
        env:
          - name: NODE_ENV
            value: "production"
          - name: SMTP_HOST
            valueFrom:
              secretKeyRef:
                name: notification-secrets
                key: smtp-host
          - name: SMTP_PORT
            valueFrom:
              secretKeyRef:
                name: notification-secrets
                key: smtp-port
          - name: SMTP_USER
            valueFrom:
              secretKeyRef:
                name: notification-secrets
                key: smtp-user
          - name: SMTP_PASS
            valueFrom:
              secretKeyRef:
                name: notification-secrets
                key: smtp-pass

# Development configuration
dev:
  notification:
    labelSelector:
      app: ${SERVICE_NAME}
    container: ${SERVICE_NAME}
    workingDir: /app
    sync:
      - path: ./
        excludePaths:
          - node_modules/
          - .git/
          - dist/
          - build/
    ports:
      - port: "${SERVICE_PORT}:${SERVICE_PORT}"
    terminal:
      command: npm run dev
    logs:
      enabled: true
      follow: true

# Service-specific pipelines
pipelines:
  dev:
    run: |
      # Build the notification service
      devspace build notification
      # Deploy to development environment
      devspace deploy
      # Start development mode
      devspace dev notification

  build:
    run: |
      # Build the notification service
      devspace build notification

  deploy:
    run: |
      # Deploy the notification service
      devspace deploy

  logs:
    run: |
      # View logs for the notification service
      devspace logs notification

  test:
    run: |
      # Run tests for the notification service
      npm test

# Service-specific hooks
hooks:
  - command: echo "Building ${SERVICE_NAME} service..."
    when:
      before:
        - dev:build
  - command: echo "${SERVICE_NAME} service built successfully"
    when:
      after:
        - dev:build
  - command: echo "Deploying ${SERVICE_NAME} service..."
    when:
      before:
        - dev:deploy
  - command: echo "${SERVICE_NAME} service deployed successfully"
    when:
      after:
        - dev:deploy
