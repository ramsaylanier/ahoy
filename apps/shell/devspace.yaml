version: v2beta1
name: shell

# Service-specific variables
vars:
  SERVICE_PORT: "3000"
  PROJECT_NAME: "ahoy-microservices"
  REGISTRY: "ghcr.io"
  IMAGE_TAG: "latest"

dependencies:
  projects:
    path: ../projects
    pipeline: dev
  react-frontend:
    path: ../react-frontend
    pipeline: dev

# This is a list of `pipelines` that DevSpace can execute (you can define your own)
pipelines:
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      run_dependencies --all       # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all    # 2. Ensure pull secrets
      create_deployments --all     # 3. Deploy Helm charts and manifests specfied as "deployments"
      start_dev shell                # 4. Start dev mode "app" (see "dev" section)
  # You can run this pipeline via `devspace deploy` (or `devspace run-pipeline deploy`)
  deploy:
    run: |-
      run_dependencies --all                            # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all                         # 2. Ensure pull secrets
      build_images --all -t $(git describe --always)    # 3. Build, tag (git commit hash) and push all images (see "images")
      create_deployments --all                          # 4. Deploy Helm charts and manifests specfied as "deployments"

# Images configuration
images:
  shell:
    image: shell:latest
    dockerfile: ./Dockerfile

# Deployments configuration
deployments:
  shell:
    helm:
      chart:
        name: component-chart
        repo: https://charts.devspace.sh
      values:
        containers:
          - image: shell:latest
        service:
          ports:
            - port: ${SERVICE_PORT}

# Development configuration
dev:
  shell:
    imageSelector: image(shell)
    devImage: node:22-alpine
    workingDir: /app
    sync:
      - path: ./
        excludePaths:
          - node_modules/
          - .git/
          - dist/
          - build/
          - .angular/
        startContainer: true
        onUpload:
          exec:
            - command: |-
                echo "Installing dependencies..."
                npm install
    command: ["npm", "run", "dev"]
    logs:
      enabled: true
    ssh:
      enabled: true
    proxyCommands:
      - command: devspace
      - command: kubectl
      - command: helm
      - gitCredentials: true
    ports:
      - port: ${SERVICE_PORT}
    open:
      - url: http://localhost:${SERVICE_PORT}
