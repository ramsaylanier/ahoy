version: v2beta1
name: auth

# Service-specific variables
vars:
  SERVICE_NAME: "auth"
  SERVICE_PORT: "3001"
  PROJECT_NAME: "ahoy-microservices"
  REGISTRY: "ghcr.io"
  IMAGE_TAG: "latest"

# Deployments configuration
deployments:
  auth:
    helm:
      chart:
        name: component-chart
        repo: https://charts.devspace.sh
      values:
        containers:
          - image: ghcr.io/ahoy-microservices/auth:latest
            name: auth
            env:
              - name: NODE_ENV
                value: "production"
              - name: JWT_SECRET
                valueFrom:
                  secretKeyRef:
                    name: auth-secrets
                    key: jwt-secret
              - name: DATABASE_URL
                valueFrom:
                  secretKeyRef:
                    name: auth-secrets
                    key: database-url
              - name: REDIS_URL
                valueFrom:
                  secretKeyRef:
                    name: auth-secrets
                    key: redis-url
            resources:
              limits:
                cpu: 300m
                memory: 256Mi
              requests:
                cpu: 150m
                memory: 128Mi
        service:
          type: ClusterIP
          ports:
            - port: 3001
              targetPort: 3001
        labels:
          app: auth

# Development configuration
dev:
  auth:
    labelSelector:
      app: auth
    container: auth
    workingDir: /app
    sync:
      - path: ./
        excludePaths:
          - node_modules/
          - .git/
          - dist/
          - build/
    ports:
      - port: "${SERVICE_PORT}:${SERVICE_PORT}"
    terminal:
      command: npm run dev
    logs:
      enabled: true

# Service-specific pipelines
pipelines:
  dev: |-
    run_dependencies --all
    ensure_pull_secrets --all
    create_deployments --all
    start_dev auth

  deploy: |-
    run_dependencies --all
    ensure_pull_secrets --all
    build_images --all
    create_deployments --all

# Service-specific hooks
hooks:
  - command: echo "Deploying ${SERVICE_NAME} service..."
    events:
      - before:deploy
  - command: echo "${SERVICE_NAME} service deployed successfully"
    events:
      - after:deploy
